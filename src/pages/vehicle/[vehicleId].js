import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.scss";

import API from "@/lib/api";
import { useEffect, useState } from "react";
import { BeatLoader } from "react-spinners";
import { useRouter } from "next/router";
import Link from "next/link";

const inter = Inter({ subsets: ["latin"] });

export default function VehicleId() {
  const router = useRouter();
  const { vehicleId } = router.query;
  const [vehicle, setVehicle] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    console.log("vehicleId", vehicleId);
    fetchVechile();
  }, []);

  const fetchVechile = async () => {
    setIsLoading(true);
    const response = await API.vehicles
      .findById(vehicleId)
      .then(function (results) {
        console.log("findById", results.data.data.vehicle);
        setVehicle(results.data.data.vehicle);
        setIsLoading(false);
      })
      .catch((err) => {
        console.log("err...", err);
        router.push("/error");
      });
  };

  const myLoader = ({ src }) => {
    return src;
  };

  return (
    <>
      <Head>
        <title>Vehicle Merchandising - Vehicle Details</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {isLoading ? (
        <div className="flex flex-col h-screen justify-center items-center">
          <span className="p-4">Loading...</span>
          <BeatLoader color="#36d7b7" />
        </div>
      ) : (
        <>
          {vehicle.id == vehicleId && (
            <main className="h-screen w-full flex flex-col justify-center items-center bg-[#1A2238]">
              <div className="w-[90%] flex flex-col gap-4 justify-between bg-white rounded-lg p-4">
                <Image
                  loader={myLoader}
                  src={vehicle.details_image}
                  alt="Vehicle Image"
                  width={450}
                  height={450}
                />
                <div className="flex flex-col items-center justify-center p-4">
                  <h1 className="text-3xl font-extrabold tracking-widest">
                    {vehicle.model_year} {vehicle.make}{" "}
                  </h1>
                  <h2 className="text-2xl font-extrabold tracking-widest">
                    {vehicle.model} {vehicle.trim}
                  </h2>
                  {vehicle.mileage && (
                    <p className="text-xl font-light tracking-widest justify-center p-4 md:p-0">
                      <b className="text-xl font-extrabold">
                        {vehicle.mileage.toLocaleString()}{" "}
                      </b>
                      <span className="text-[#FF6A3D]">Mi.</span>
                    </p>
                  )}
                  <p className="text-xl font-light tracking-widest flex flex-col md:flex-row justify-center text-center p-2 md:p-0">
                    <span className="text-[#FF6A3D]">Monthly Fee:</span>{" "}
                    <b className="text-xl font-extrabold">
                      $
                      {vehicle.product_financials[0].monthly_payment_cents.toLocaleString()}
                    </b>
                  </p>
                  <p className="text-xl font-light tracking-widest flex flex-col md:flex-row justify-center text-center p-2 md:p-0">
                    <span className="text-[#FF6A3D]">Start Fee:</span>{" "}
                    <b className="text-xl font-extrabold">
                      $
                      {vehicle.product_financials[0].start_fee_cents.toLocaleString()}
                    </b>
                  </p>
                </div>
              </div>
              <Link href={`/`} legacyBehavior>
                <a className="mt-5 relative inline-block text-sm font-medium text-[#FF6A3D] group active:text-orange-500 focus:outline-none focus:ring">
                  <span className="absolute inset-0 transition-transform translate-x-0.5 translate-y-0.5 bg-[#FF6A3D] group-hover:translate-y-0 group-hover:translate-x-0"></span>

                  <span className="relative block px-8 py-3 bg-[#1A2238] border border-current">
                    Go Home
                  </span>
                </a>
              </Link>
            </main>
          )}
        </>
      )}
    </>
  );
}

// export async function getStaticPaths() {
//   return {
//     paths: [{ params: { vehicleId: vehicleId } }],
//     fallback: false,
//   };
// }

// export async function getStaticProps(context) {
//   const { params } = context;
//   console.log(context);
//   const response = await fetch(
//     `https://private-a96f0-jumpsuitinterview.apiary-mock.com/vehicles/${params.vehicleId}`,
//     {
//       method: "GET",
//       headers: {
//         "Content-Type": "application/json",
//       },
//     }
//   );
//   const data = await response.json();

//   return {
//     props: {
//       president: data,
//     },
//   };
// }
